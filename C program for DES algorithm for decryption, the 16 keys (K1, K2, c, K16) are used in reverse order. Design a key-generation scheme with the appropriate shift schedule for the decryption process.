#include <stdio.h>

// Reverse PC-2 table for decryption
static const int PC2_reverse[] = {
    7, 15, 23, 31, 39, 47, 55, 63,
    6, 14, 22, 30, 38, 46, 54, 62,
    5, 13, 21, 29, 37, 45, 53, 61,
    4, 12, 20, 28, 36, 44, 52, 60,
    3, 11, 19, 27, 35, 43, 51, 59,
    2, 10, 18, 26, 34, 42, 50, 58,
    1,  9, 17, 25, 33, 41, 49, 57,
    0,  8, 16, 24, 32, 40, 48, 56,
};

// Function to perform left circular shift on a 28-bit key
void leftCircularShift(unsigned char *key, int shift) {
    unsigned char temp[28];
    for (int i = 0; i < 28; i++) {
        int newIndex = (i + shift) % 28;
        temp[i] = key[newIndex];
    }
    for (int i = 0; i < 28; i++) {
        key[i] = temp[i];
    }
}

// Function to generate the reverse order of 16 subkeys for decryption
void generateDecryptionSubkeys(unsigned char *initialKey, unsigned char subkeys[16][6]) {
    // PC-1 operation to get C0 and D0
    // ...

    // Perform 16 rounds of key generation with left circular shifts
    // and PC-2 operation in reverse order for decryption
    // ...
}

int main() {
    unsigned char initialKey[8] = {0x12, 0x34, 0x56, 0x78, 0x9A, 0xBC, 0xDE, 0xF0};
    unsigned char subkeys[16][6];

    generateDecryptionSubkeys(initialKey, subkeys);

    // Use the generated subkeys for decryption process
    // ...

    return 0;
}
